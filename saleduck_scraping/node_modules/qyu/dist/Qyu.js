"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = void 0;
const QyuBase_1 = __importDefault(require("./QyuBase"));
const QyuInvokable = class Qyu extends QyuBase_1.default {
    constructor(opts = {}) {
        super(opts);
        const selfInvokableQyu = makeQyuSelfInvokable(this);
        return selfInvokableQyu;
    }
};
exports.default = QyuInvokable;
function makeQyuSelfInvokable(q) {
    const qyuAsAny = q;
    return new Proxy((async (...args) => {
        return args[0][Symbol.iterator] instanceof Function
            ? qyuAsAny.map(args[0], args[1], args[2])
            : qyuAsAny.add(...args);
    }), {
        get: (_target, prop, _receiver) => {
            return qyuAsAny[prop];
        },
        set: (_obj, prop, value) => {
            qyuAsAny[prop] = value;
            return true;
        },
    });
}
/*
  TODOs:
  - Go through entire `README.md`, most importantly probably convert all imports from `require`s to `import` statements
  - Possibly replace all the initial `null` values all around here into `undefined`
  - Make all nullable numeric options to be defaulted to `Infinity` to normalize all operations on them and their type checks
  - Make up and extract out subtypes of the QyuError for each possible error
  - Should I drop the current support for Node.js 7.6.0 in favor of 10.x.x something?
  - Upgrade prettier
  - Devise and publicly expose a proper way to dequeue jobs
*/
//# sourceMappingURL=Qyu.js.map